process {
    tempDir = "${params.tempdir}"


    //gffread
    withName: GFFREAD {
        
        memory = {gff.toList().size() > 1 ?
                8.B * ((gff.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt + (1024*1024*1024)):
                8.B * ((gff.target.size()) * task.attempt + (1024*1024*1024))}

        time = { gff.toList().size() > 1 ?
                    8.ms * ((gff.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt / 1000 + 125000) :
                    8.ms * (gff.target.size() * task.attempt / 1000 + 125000)}
        cpus = 2

        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3

        ext.prefix = { "${gff.baseName}.out" }


    }

    //CPAT
    withName: CPAT {

        memory = {gene.toList().size() > 1 ?
                8.B * ((gene.target.stream().reduce(0, (x, y) -> x + y.size()) + CpatHex.target.size() + referenceFasta.target.size()) * task.attempt + (1024*1024*1024)):
                8.B * ((gene.target.size() + CpatHex.target.size() + referenceFasta.target.size()) * task.attempt + (1024*1024*1024))}

        time = { gene.toList().size() > 1 ?
                    8.ms * ((gene.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt / 1000 + 125000) :
                    8.ms * (gene.target.size() * task.attempt / 1000 + 125000)}
        cpus = 2

        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3
    }

    //MULTIQC
    withName: MULTIQC {
        memory = {multiqc_files.toList().size() > 1 ?
                8.B * ((multiqc_files.target.stream().reduce(0, (x, y) -> x + y.size()) + CpatHex.target.size()) * task.attempt + (1024*1024*1024)):
                8.B * ((multiqc_files.target.size() + CpatHex.target.size()) * task.attempt + (1024*1024*1024))}

        time = { multiqc_files.toList().size() > 1 ?
                    8.ms * ((multiqc_files.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt / 1000 + 125000) :
                    8.ms * (multiqc_files.target.size() * task.attempt / 1000 + 125000)}
        cpus = 2

        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3
        
        publishDir = [path:{"${params.outdir}/multiqc"}, mode: 'copy']
    }

    //GFFCOMPARE
    withName:  GFFCOMPARECOMP {

        publishDir = [path:{"${params.outdir}/gffcompare_results_comparison/${meta.id}"}, mode: 'copy']
        
        queue = { gtfs.toList().size() > 1 ?
                    (5*((gtfs.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt / 1000 + 125000) < 3600000 ? 'short' : 'all') :
                    (5*(gtfs.target.size() * task.attempt / 1000 + 125000) < 3600000 ? 'short' : 'all')}

        memory = {gtfs.toList().size() > 1 ?
                8.B * ((gtfs.target.stream().reduce(0, (x, y) -> x + y.size()) + fasta.target.size() + reference_gtf.target.size()) * task.attempt + (1024*1024*1024)):
                8.B * ((gtfs.target.size() + fasta.target.size() + reference_gtf.target.size()) * task.attempt + (1024*1024*1024))}

        time = { gtfs.toList().size() > 1 ?
                    5.ms * ((gtfs.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt / 1000 + 125000) :
                    5.ms * (gfts.target.size() * task.attempt / 1000 + 125000)}
        cpus = 2

        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3

        //ext.args =


    }

}
includeConfig "QC_tasks.config"
includeConfig "sample_tasks.config"
includeConfig "Bammetrics_tasks.config"
includeConfig "Calculateregions_tasks.config"
includeConfig "Variantcall_preprocess_tasks.config"
includeConfig "variantcalling_singlecell_tasks.config"
includeConfig "MultiBamExpressionQuantification_tasks.config"
includeConfig "rnabloom2.config"
includeConfig "fatogtf_tasks.config"
includeConfig 'arriba_fusion.config'
includeConfig "longgftasks.config"
includeConfig "seqtkseq.config"
includeConfig "jaffal.config"
includeConfig "starlong_arriba.config"