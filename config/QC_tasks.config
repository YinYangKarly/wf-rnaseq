process {

     //fastqc
    withName: FASTQC {
        memory = {reads.toList().size() > 1 ?
                    8.B * ((reads.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt + (1024*1024*1024)):
                    8.B * (reads.target.size() * task.attempt + (1024*1024*1024))}

        time = {reads.toList().size() > 1 ?
                    8.ms * ((reads.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt /1000 + 125000) :
                    8.ms * (reads.target.size() * task.attempt /1000 + 125000)}
        
        cpus = 1

        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3
        publishDir = { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" }
    }



    //cutadapt
    withName: CUTADAPT {
        memory = {reads.toList().size() > 1 ?
                    8.B * ((reads.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt + (1024*1024*1024)) :
                    8.B * (reads.target.size() * task.attempt + (1024*1024*1024))}

        time = { reads.toList().size() > 1 ?
                    8.ms * ((reads.target.stream().reduce(0, (x, y) -> x + y.size())) * task.attempt / 1000 + 125000):
                    8.ms * (reads.target.size() * task.attempt / 1000 + 125000)}

        cpus = 1

        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3
    }
}